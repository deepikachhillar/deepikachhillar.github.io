# - name: PL & ML
#   id: plml
#   start: 2018
#   members: revan,ikabir
#   papers:
#   description: Can research in programming languages help with machine learning? In this work, we are exploring how to use/develop programming language techniques to solve some of the common problems that researchers and practicioners encounter while building machine learning systems.

- name: Organizational Culture and Wrongdoing - A view through the Glassdoor
  id: glassdoor
  start: 2019
  link: https://deepikachhillar.github.io/resources/papers/glassdoor.pdf
#   members: G. Love,D. Sull, M. Kraatz
#   papers: glassdoor
  collaborators: with Prof. Geoffrey Love, Prof. Donald Sull, & Prof. Matthew Kraatz
  description: Organizational culture is frequently identified as an important antecedent to wrongdoing by scholars as well as the popular media. However, organizational culture is not a monolithic entity, but is in fact, an amalgam of different elements (of shared expectations, assumptions, beliefs, and values) that influence actions. In this study, we investigate which elements of culture are most predictive of organizational wrongdoing. First, we use NLP to identify cultural norms and values from reviews posted on Glassdoor by employees of large public US-based firms. Then, we employ ML methods (combining XGboost and SHAP values) to identify cultural features that are the most salient predictors of deliberate financial wrongdoing. We find that organizations excessively favoring a culture of high workload, lacking the requisite resources (both human and capital), or having an unfriendly work environment, are more likely to engage in unethical behavior. Our paper aims to enhance our collective understanding of culture and wrongdoing literature in two main ways. First, we shed light on the values and norms that are essential in predicting fraudulent behavior, a link that, in our view, scholars have studied only limitedly. Secondly, by using ML techniques to understand cultural antecedents to wrongdoing, we aim to contribute to theory-building by algorithm-supported induction.
  
- name: An Eye for AI - Insights into the Governance of Artificial Intelligence and Vision for Future Research
  id: governance
  start: 2019
#   members: R. Aguilera
#   papers: glassdoor
  collaborators: with Prof. Ruth Aguilera
  description: In this 60th anniversary of Business and Society essay, we review existing management research on artificial intelligence (AI), particularly its governance, and offer a framework to examine how governance can support sustainable AI-adoption by businesses and society. The governance of AI-powered technologies is essential and yet complex because of AI’s significant impact, where AI is redefining the legal environment, changing industry practices, creating emerging organizational forms, and giving rise to new labor and leadership responsibilities. We discuss the AI challenges studied across various research themes, highlight AI governance's role in mitigating such challenges, and propose a governance framework for bridging the management literature with this emerging yet rapidly growing research topic. We conclude by offering suggestions for future empirical research and theory-building on the governance of AI. This review contributes to the literature by elucidating how businesses and their governance may harness AI’s power without creating or amplifying societal inequalities.
  
# - name: Just-in-Time Compilers
#   id: jit
#   github:
#   start: 2016
#   members: cijie,knewbury,eochoa,sjkillen
#   papers:
#   description: Can we help JIT compilers make better decisions when applying a code transformation? In this work, we have been developing several algorithms that enable a JIT compiler to reason not only about the cost of applying a code tranformation (e.g., method inlining), but also about the potential future benefits (e.g., further optimizations) of applying such a code transformation.
#   impact:

# - name: Detecting Misuses of Crypto APIs
#   id: crypto
#   start: 2015
#   members: knewbury,skrueger,mbenz
#   papers: ccgen,crysl-tse,crysl,cognicrypt-tool,crossing
#   description: Can program analysis help developers use crypto APIs more securely? In this work, we have been working on an end-to-end solution to detect misuses of crypto APIs that provides a DSL to define the correct uses of an API, a compiler that generates static analysis checks based on those rules, and IDE extensions that help developers detect misuses in their code based on our infrastructure.
#   impact: Most recently, our work with <a href="https://projects.eclipse.org/projects/technology.cognicrypt" target="_blank">CogniCrypt</a> helped <a href="https://support.symantec.com/en_US/article.SYMSA1460.html" target="_blank">Symantec</a> fix a bug in one of its products that could lead to privilege escalation.

# - name: Scalable and Precise Pointer Analysis
#   id: scaleprecise
#   start: 2014
#   members: spaeth
#   papers: spds,ideal,boomerang
#   description: Can pointer analysis be both scalable and precise? In this work, we explore how to leverage the advantages of distributive frameworks such as IFDS, IDE, and WPDS to perform scalable and precise non-distributive analyses such as pointer analysis. We have been building various on-demand pointer analyses that also encode rich alias information for the queried variables.

# - name: Partial-Program Analysis for Java
#   id: averroes
#   github:
#   start: 2010
#   members: seekatz,mappel
#   papers: phd-thesis,averroes,cgc
#   description: Can we perform whole-program analysis of a given Java application without analyzing the whole program? Through light-weight static analyses of the structure of a given application, we have shown that the answer to this question is 'yes'. Moreover, we developed Averroes, a placeholder library generator that enables the use of that suite in any Java whole-program analysis framework. Using Averroes reduces the amount of code that needs to be analyzed by up to 600x, improving the performance of call graph analysis as it becomes up to 7x faster, and uses up to 6x less memory.
#   impact: Averroes is currently used by the major Java static analysis frameworks, <a href="https://github.com/Sable/soot/wiki/Extensions-to-Soot" target="_blank">Soot</a>, <a href="https://github.com/wala/WALA/wiki/WALA-Based-Tools" target="_blank">WALA</a>, and <a href="https://bitbucket.org/yanniss/doop" target="_blank">DOOP</a>.

# - name: Usability of Static Analysis Tools
#   id: usability
#   start: 2014
#   end: 2019
#   members: lnqd,almacken,alex,tyler,swapnil
#   papers: softwareag-study,visuflow,visuflow-tool,jit-analysis,cheetah-tool
#   description: How can we build better experiences for users of static analysis tools? In this work, we have been exploring novel techniques to facilitate the development of program analyses that are more responsive, more precise, well-integrated in the developer's workflow, and customized to the developer's needs.

# - name: ScalaCG
#   id: scalacg
#   website: https://github.com/themaplelab/scalacg
#   start: 2013
#   end: 2015
#   papers: scalacg-journal,scalacg
#   description: Is analyzing the Scala source code any different than analyzing the JVM bytecodes that the Scala compiler generates? In this work, we developed ScalaCG, a collection of low-cost call graph analyses that target the Scala source code and support various Scala features such as traits, abstract type members, closures, and path-dependent types. Using ScalaCG produces call graphs that are up to 19x more precise than using a bytecode-based approach in terms of call edges and reachable nodes.
#   impact: ScalaCG was awarded a Distinguished Artifact Award at the European Conference on Object-Oriented Programming (ECOOP) in 2014. Scalacg has been extended by the original Scala research group at EPFL to improve call graph precision and decrease analysis time for non-trivial Scala programs. These extensions are integrated in the upcoming Scala Dotty compiler.

# - name: Algorizmi
#   id: algorizmi
#   website: https://sourceforge.net/projects/algorizmi/
#   start: 2008
#   end: 2009
#   papers: masters-thesis,kernel-ids,p2p-ais
#   description: Can we have reproducible evaluations for intrusion detection systems? In this work, we developed an open-source configurable virtual testbed (based on the Eucalyptus cloud platform) for evaluating Intrusion Detection Systems.

# - name: Beep
#   id: beep
#   website: https://sourceforge.net/projects/beep/
#   start: 2006
#   end: 2007
#   description: Is Jabber suitable enough for devices with limited resources? In this work, we developed a wireless telecommunication framework based on the Jabber protocol, targeting JME (known before as J2ME) enabled devices.
